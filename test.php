<?php
/**
 * Script de test pour SocialFlow
 * V√©rifie que tous les composants fonctionnent correctement
 */

echo "<h1>üß™ Test de SocialFlow</h1>";
echo "<style>body{font-family:Arial,sans-serif;margin:20px;} .success{color:green;} .error{color:red;} .info{color:blue;}</style>";

// Test 1: Configuration
echo "<h2>1. Test de configuration</h2>";
try {
    require_once 'config/database.php';
    echo "<p class='success'>‚úÖ Configuration de base de donn√©es charg√©e</p>";
} catch (Exception $e) {
    echo "<p class='error'>‚ùå Erreur configuration: " . $e->getMessage() . "</p>";
}

// Test 2: Connexion base de donn√©es
echo "<h2>2. Test de connexion base de donn√©es</h2>";
try {
    $db = getDB();
    echo "<p class='success'>‚úÖ Connexion √† la base de donn√©es r√©ussie</p>";
} catch (Exception $e) {
    echo "<p class='error'>‚ùå Erreur connexion BDD: " . $e->getMessage() . "</p>";
}

// Test 3: Fonctions utilitaires
echo "<h2>3. Test des fonctions utilitaires</h2>";
try {
    require_once 'includes/functions.php';
    echo "<p class='success'>‚úÖ Fonctions utilitaires charg√©es</p>";
    
    // Test de validation email
    if (validate_email('test@example.com')) {
        echo "<p class='success'>‚úÖ Validation email fonctionne</p>";
    } else {
        echo "<p class='error'>‚ùå Validation email √©choue</p>";
    }
    
    // Test de hachage mot de passe
    $password = 'test123';
    $hash = hash_password($password);
    if (verify_password($password, $hash)) {
        echo "<p class='success'>‚úÖ Hachage mot de passe fonctionne</p>";
    } else {
        echo "<p class='error'>‚ùå Hachage mot de passe √©choue</p>";
    }
} catch (Exception $e) {
    echo "<p class='error'>‚ùå Erreur fonctions: " . $e->getMessage() . "</p>";
}

// Test 4: Tables de base de donn√©es
echo "<h2>4. Test des tables de base de donn√©es</h2>";
try {
    $tables = ['users', 'subscriptions', 'payments', 'posts', 'notifications', 'client_assignments'];
    foreach ($tables as $table) {
        $stmt = $db->prepare("SHOW TABLES LIKE ?");
        $stmt->execute([$table]);
        if ($stmt->fetch()) {
            echo "<p class='success'>‚úÖ Table '$table' existe</p>";
        } else {
            echo "<p class='error'>‚ùå Table '$table' manquante</p>";
        }
    }
} catch (Exception $e) {
    echo "<p class='error'>‚ùå Erreur test tables: " . $e->getMessage() . "</p>";
}

// Test 5: Comptes de d√©monstration
echo "<h2>5. Test des comptes de d√©monstration</h2>";
try {
    $stmt = $db->prepare("SELECT email, role FROM users WHERE email IN (?, ?, ?)");
    $stmt->execute(['admin@socialflow.com', 'cm@socialflow.com', 'client@socialflow.com']);
    $users = $stmt->fetchAll();
    
    if (count($users) === 3) {
        echo "<p class='success'>‚úÖ Tous les comptes de d√©monstration existent</p>";
        foreach ($users as $user) {
            echo "<p class='info'>üìß {$user['email']} - {$user['role']}</p>";
        }
    } else {
        echo "<p class='error'>‚ùå Comptes de d√©monstration manquants</p>";
    }
} catch (Exception $e) {
    echo "<p class='error'>‚ùå Erreur test comptes: " . $e->getMessage() . "</p>";
}

// Test 6: Syst√®me de notifications
echo "<h2>6. Test du syst√®me de notifications</h2>";
try {
    require_once 'includes/notifications.php';
    echo "<p class='success'>‚úÖ Syst√®me de notifications charg√©</p>";
    
    // Test cr√©ation notification
    $notification_id = create_notification(1, 'Test', 'Notification de test', 'info');
    if ($notification_id) {
        echo "<p class='success'>‚úÖ Cr√©ation de notification fonctionne</p>";
        
        // Nettoyer la notification de test
        delete_notification($notification_id, 1);
        echo "<p class='info'>üßπ Notification de test supprim√©e</p>";
    } else {
        echo "<p class='error'>‚ùå Cr√©ation de notification √©choue</p>";
    }
} catch (Exception $e) {
    echo "<p class='error'>‚ùå Erreur notifications: " . $e->getMessage() . "</p>";
}

// Test 7: Sessions
echo "<h2>7. Test des sessions</h2>";
try {
    session_start();
    $_SESSION['test'] = 'value';
    if (isset($_SESSION['test']) && $_SESSION['test'] === 'value') {
        echo "<p class='success'>‚úÖ Sessions PHP fonctionnent</p>";
        unset($_SESSION['test']);
    } else {
        echo "<p class='error'>‚ùå Sessions PHP √©chouent</p>";
    }
} catch (Exception $e) {
    echo "<p class='error'>‚ùå Erreur sessions: " . $e->getMessage() . "</p>";
}

// Test 8: Permissions fichiers
echo "<h2>8. Test des permissions</h2>";
$directories = ['config', 'includes', 'auth', 'client', 'cm', 'admin', 'database'];
foreach ($directories as $dir) {
    if (is_dir($dir)) {
        if (is_readable($dir)) {
            echo "<p class='success'>‚úÖ Dossier '$dir' accessible en lecture</p>";
        } else {
            echo "<p class='error'>‚ùå Dossier '$dir' non accessible</p>";
        }
    } else {
        echo "<p class='error'>‚ùå Dossier '$dir' manquant</p>";
    }
}

// R√©sum√©
echo "<h2>üìä R√©sum√© des tests</h2>";
echo "<p class='info'>üéØ SocialFlow est pr√™t √† √™tre utilis√© !</p>";
echo "<p class='info'>üìñ Consultez le README.md pour la documentation compl√®te</p>";
echo "<p class='info'>üöÄ Consultez INSTALL.md pour le guide d'installation</p>";
echo "<p class='info'>üîó Acc√©dez √† l'application : <a href='index.php'>http://localhost/SF2</a></p>";

echo "<hr>";
echo "<p><strong>Comptes de test :</strong></p>";
echo "<ul>";
echo "<li><strong>Admin:</strong> admin@socialflow.com / password</li>";
echo "<li><strong>Community Manager:</strong> cm@socialflow.com / password</li>";
echo "<li><strong>Client:</strong> client@socialflow.com / password</li>";
echo "</ul>";
?>
